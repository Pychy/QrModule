{"name":"Qrmodule","tagline":"Android Qr Scan and generate module.Based on Google Zxing library.","body":"### Android QR Module\r\n\r\n\r\n\r\n[![Download](https://api.bintray.com/packages/ydcool/maven/QrModule/images/download.svg)](https://bintray.com/ydcool/maven/QrModule/_latestVersion)\r\n[![Build Status](https://travis-ci.org/Ydcool/QrModule.svg?branch=master)](https://travis-ci.org/Ydcool/QrModule)\r\n\r\n>\r\n* Thanks to [Ryan_Tang][].本项目基于他[blog][]上的项目优化改进。\r\n* Feel free to fork and pr.\r\n\r\n#### Features\r\n\r\n* Qr Scan\r\n* Qr Generate\r\n\r\n##### QR Scan\r\n\r\nDemo APK [download][] or scan ![](https://api.qrserver.com/v1/create-qr-code/?data=http://7xiilm.com1.z0.glb.clouddn.com/apk%2Fqrmodule-demo-v1.0.apk&size=120x120)    \r\n\r\n![](art/demo_scan.gif)\r\n\r\n###### Usage\r\n\r\n1  Add gradle dependence:\r\n\r\n```java\r\n    compile 'me.ydcool.lib:qrmodule:latest.integration'\r\n```\r\n\r\n2  Add  [QrScannerActivity][] to your `AndroidManifest.xml`\r\n\r\n```xml\r\n    <activity android:name=\"me.ydcool.lib.qrmodule.activity.QrScannerActivity\"/>\r\n```\r\n\r\n3  Add permissions\r\n\r\n```xml\r\n    <uses-permission android:name=\"android.permission.CAMERA\"/>\r\n    <uses-permission android:name=\"android.permission.FLASHLIGHT\"/>\r\n    <uses-permission android:name=\"android.permission.VIBRATE\"/>\r\n```\r\n\r\n4  Start `QrScannerActivity` in your activity.\r\n\r\n```java\r\n    Intent intent = new Intent(MainActivity.this, QrScannerActivity.class);\r\n    startActivityForResult(intent, QrScannerActivity.QR_REQUEST_CODE);\r\n```\r\n\r\n5  And receive scanner activity result in your activity.\r\n\r\n```java\r\n    @Override\r\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\r\n        super.onActivityResult(requestCode, resultCode, data);\r\n        if (requestCode == QrScannerActivity.QR_REQUEST_CODE) {\r\n            Log.d(TAG, resultCode == RESULT_OK\r\n                            ? data.getExtras().getString(QrScannerActivity.QR_RESULT_STR)\r\n                            : \"Scanned Nothing!\");\r\n        }\r\n    }\r\n```\r\n\r\nSee more details in Demo [MainActivity][].\r\n\r\n##### QR Generate\r\n\r\n![](art/demo_generate.gif)\r\n\r\n###### Usage\r\n\r\n* Generate qr code with `QrGenerator`.\r\n\r\n```java\r\n   Bitmap qrCode = new QrGenerator.Builder()\r\n       .content(\"https://github.com/Ydcool/QrModule\")\r\n       .qrSize(300)\r\n       .margin(2)\r\n       .color(Color.BLACK)\r\n       .bgColor(Color.WHITE)\r\n       .ecc(ErrorCorrectionLevel.H)\r\n       .overlay(getContext(),R.mipmap.ic_launcher)\r\n       .overlaySize(100)\r\n       .overlayAlpha(255)\r\n       .overlayXfermode(PortBuff.Mode.SRC_ATOP)\r\n       .encode();\r\n\r\n    mImageView.setImageBitmap(qrCode);\r\n```\r\n\r\n| Method | Description |\r\n| ----- | ----- |\r\n| `content(String content)` | content of qr code. |\r\n| `qrSize(int size)` | qr code image size. |\r\n| `margin(int margin)` | default is 2.See more about [EncodeHintType.MARGIN][] |\r\n| `color(int color)` | qr code foreground color. |\r\n| `color(Context c, @ColorRes int color)` | set foreground color with color resource. |\r\n| `bgColor(int color)` | set the background color. |\r\n| `bgColor(Context c,@ColorRes int color)` | set the background color with color resource. |\r\n| `ecc(ErrorCorrectionLevel e)` | error correction level , default is `L` (~7%).See more about [ErrorCorrectionLevel][]. |\r\n| `overlay(Bitmap overlay)` | overlay image on qr code, usually set with logo. **NOTICE: once you set overlay image,you'd better set `ecc` to `H`**. |\r\n| `overlay(Context c,@DrawableRes int overlay)` | set overlay with drawable resource. | \r\n| `overlaySize(int size)` | overlay image size in qr code. |\r\n| `overlayAlpha(int alpha)` |set overlay image alpha, range [0,255], default is 255(opaque). |\r\n| `overlayXfermode(PorterDuff.Mode m)` | set xfermode for overlay bitmap,default is `SRC`,see more about [PorterDuff.Mode][]. |\r\n| `footNote(String s)` | *This feature is under develop* . |\r\n| `encode()` | return a encoded qrCode bitmap. |\r\n\r\n#### TODO\r\n\r\n* Custom pattern support.\r\n\r\n#### License\r\n\r\nApache License. \r\nSee the [LICENSE][] for more info.\r\n\r\n[Ryan_Tang]:http://blog.csdn.net/ryantang03\r\n[blog]:http://blog.csdn.net/ryantang03/article/details/7831826\r\n[QrScannerActivity]:https://github.com/Ydcool/QrModule/blob/master/qrmodule/src/main/java/me/ydcool/lib/qrmodule/activity/QrScannerActivity.java\r\n[MainActivity]:https://github.com/Ydcool/QrModule/blob/master/demo/src/main/java/me/ydcool/qrmodule/demo/MainActivity.java\r\n[QrGenerator]:https://github.com/Ydcool/QrModule/blob/master/qrmodule/src/main/java/me/ydcool/lib/qrmodule/encoding/QrGenerator.java\r\n[DemoGeneratorActivity]:https://github.com/Ydcool/QrModule/blob/master/demo/src/main/java/me/ydcool/qrmodule/demo/DemoGeneratorActivity.java\r\n[LICENSE]:https://github.com/Ydcool/QrModule/blob/master/LICENSE\r\n[EncodeHintType.MARGIN]:https://github.com/zxing/zxing/blob/master/core/src/main/java/com/google/zxing/EncodeHintType.java\r\n[ErrorCorrectionLevel]:https://github.com/zxing/zxing/blob/master/core/src/main/java/com/google/zxing/qrcode/decoder/ErrorCorrectionLevel.java\r\n[PorterDuff.Mode]:http://developer.android.com/reference/android/graphics/PorterDuff.Mode.html\r\n[download]:http://7xiilm.com1.z0.glb.clouddn.com/apk%2Fqrmodule-demo-v1.0.apk\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}